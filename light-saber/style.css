*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --hue: 120;
    --lighten: 50%;
}


body {
    font-size: 1.5rem;
    display: grid;
    grid-template: 100px 50px 1fr / repeat(6, 1fr);
    place-items: center;
    text-transform: uppercase;
    background-color: black;
    color: white;
}

[name="colors"] {
    grid-row: 1/2;
    align-self: end;
    margin: 0.5em;
}

.lightsaber {
    grid-column: 1/-1;
    align-self: end;
    bottom: 0;
    margin-top: 45vh;
    position: relative;
}

.lightsaber input {
    position: absolute;
    height: 0;
    width: 0;
}

.lightsaber .handle {
    cursor: pointer;
    display: block;
    width: .6em;
    height: 5.5em;
    background-color: red;
    border-radius: 0 0 4px 4px;
    background-image: linear-gradient(silver 0 10px,
            hsl(45, 100%, 50%) 0 20px,
            silver 0 22px,
            black 0 28px,
            silver 0 30px,
            black 0 32px,
            silver 0 34px,
            black 0 36px,
            silver 0 38px,
            black 0 40px,
            silver 0 42px,
            black 0 44px,
            silver 0 46px,
            black 0 48px,
            silver 0 50px,
            black 0 56px,
            silver 0 70px,
            hsl(45, 100%, 50%) 0 88px,
            silver 0 70px);

}

.lightsaber .blade {
    position: absolute;
    height: 200%;
    width: 100%;
    bottom: 100%;
    background-color: white;
    border-radius: 100vw 100vw 0 0;
    box-shadow:
        inset 0 0 5px hsl(var(--hue) 100% var(--lighten) / 1),
        0 0 1em hsl(var(--hue) 100% var(--lighten) / 1),
        0 0 1.5em hsl(var(--hue) 100% var(--lighten) / 1),
        0 0 2em hsl(var(--hue) 100% var(--lighten) /1),
        0 0 3em hsl(var(--hue) 100% var(--lighten) / 1),
        0 0 5em hsl(var(--hue) 100% var(--lighten) / 1);
    transition: transform 60ms ease-out;
    transform-origin: bottom;
}

.blade::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    background-color: hsl(var(--hue) 100% var(--lighten) / 1);
    filter: blur(1.5em);
    opacity: .8;
    animation: lighting 3s infinite ease-in-out;
}

.blade::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    color: white;
    border-radius: inherit;
}

@keyframes lighting {
    50% {
        opacity: 0;
    }
}

#lightsaber:checked+.blade {
    transform: scaleY(1);
}

#lightsaber:not(:checked)+.blade {
    transform: scaleY(0);
}

#green:checked~.lightsaber {
    --hue: 120;
}

#red:checked~.lightsaber {
    --hue: 10;
}

#yellow:checked~.lightsaber {
    --hue: 60;
}

#blue:checked~.lightsaber {
    --hue: 240;
}

#violet:checked~.lightsaber {
    --hue: 300;
}

#dark:checked~.lightsaber {
    --lighten: 100%
}

#dark:checked~.lightsaber .blade:before{
        background-color: black;
}
#dark:checked~.lightsaber .blade{
    border-radius: 100px / 200% 5px 0 0;
}
